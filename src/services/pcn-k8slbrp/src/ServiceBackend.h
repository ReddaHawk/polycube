/**
* k8slbrp API generated from k8slbrp.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


#pragma once


#include "../base/ServiceBackendBase.h"


class Service;

using namespace polycube::service::model;

class ServiceBackend : public ServiceBackendBase {
 public:
  ServiceBackend(Service &parent, const ServiceBackendJsonObject &conf);
  virtual ~ServiceBackend();

  /// <summary>
  /// name
  /// </summary>
  std::string getName() override;
  void setName(const std::string &value) override;

  /// <summary>
  /// IP address of the backend server of the pool
  /// </summary>
  std::string getIp() override;

  /// <summary>
  /// Port where the server listen to (this value is ignored in case of ICMP)
  /// </summary>
  uint16_t getPort() override;
  void setPort(const uint16_t &value) override;

  /// <summary>
  /// Weight of the backend in the pool
  /// </summary>
  uint16_t getWeight() override;
  void setWeight(const uint16_t &value) override;
};
