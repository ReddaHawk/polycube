/**
* k8slbrp API generated from k8slbrp.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "Service.h"
#include "K8slbrp.h"


Service::Service(K8slbrp &parent, const ServiceJsonObject &conf)
    : ServiceBase(parent) {
  if (conf.nameIsSet()) {
    setName(conf.getName());
  }

  addBackendList(conf.getBackend());
}

Service::~Service() {}

std::string Service::getName() {
  throw std::runtime_error("Service::getName: Method not implemented");
}

void Service::setName(const std::string &value) {
  throw std::runtime_error("Service::setName: Method not implemented");
}

std::string Service::getVip() {
  throw std::runtime_error("Service::getVip: Method not implemented");
}

uint16_t Service::getVport() {
  throw std::runtime_error("Service::getVport: Method not implemented");
}

ServiceProtoEnum Service::getProto() {
  throw std::runtime_error("Service::getProto: Method not implemented");
}
std::shared_ptr<ServiceBackend> Service::getBackend(const std::string &ip) {
  throw std::runtime_error("Service::getEntry: Method not implemented");
}

std::vector<std::shared_ptr<ServiceBackend>> Service::getBackendList() {
  throw std::runtime_error("Service::getBackendList: Method not implemented");
}

void Service::addBackend(const std::string &ip, const ServiceBackendJsonObject &conf) {
  throw std::runtime_error("Service::addBackend: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Service::addBackendList(const std::vector<ServiceBackendJsonObject> &conf) {
  // call default implementation in base class
  ServiceBase::addBackendList(conf);
}

// Basic default implementation, place your extension here (if needed)
void Service::replaceBackend(const std::string &ip, const ServiceBackendJsonObject &conf) {
  // call default implementation in base class
  ServiceBase::replaceBackend(ip, conf);
}

void Service::delBackend(const std::string &ip) {
  throw std::runtime_error("Service::delBackend: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void Service::delBackendList() {
  // call default implementation in base class
  ServiceBase::delBackendList();
}


