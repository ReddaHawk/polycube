/**
* k8sdispatcher API generated from k8sdispatcher.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "NodeportRule.h"
#include "K8sdispatcher.h"


NodeportRule::NodeportRule(K8sdispatcher &parent, const NodeportRuleJsonObject &conf)
    : NodeportRuleBase(parent_) {

  //todo modifica

  internal_ip_ = conf.getInternalSrc();
  proto_ = conf.getProto();
  port_ = conf.getNodeportPort();

}

NodeportRule::~NodeportRule() {}

std::string NodeportRule::getInternalSrc() {
    return internal_ip_;
}

void NodeportRule::setInternalSrc(const std::string &value) {
  throw std::runtime_error("NodeportRule::setInternalSrc: Method not implemented");
}

uint16_t NodeportRule::getNodeportPort() {
  return port_;
}

std::string NodeportRule::getProto() {
    return proto_;
}


