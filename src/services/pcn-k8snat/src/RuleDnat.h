/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


#pragma once


#include "../base/RuleDnatBase.h"

#include "RuleDnatEntry.h"

class Rule;

using namespace polycube::service::model;

class RuleDnat : public RuleDnatBase {
 public:
  RuleDnat(Rule &parent, const RuleDnatJsonObject &conf);
  virtual ~RuleDnat();

  /// <summary>
  /// List of Destination NAT rules
  /// </summary>
  std::shared_ptr<RuleDnatEntry> getEntry(const uint32_t &id) override;
  std::vector<std::shared_ptr<RuleDnatEntry>> getEntryList() override;
  void addEntry(const uint32_t &id, const RuleDnatEntryJsonObject &conf) override;
  void addEntryList(const std::vector<RuleDnatEntryJsonObject> &conf) override;
  void replaceEntry(const uint32_t &id, const RuleDnatEntryJsonObject &conf) override;
  void delEntry(const uint32_t &id) override;
  void delEntryList() override;

  RuleDnatAppendOutputJsonObject append(RuleDnatAppendInputJsonObject input) override;
};
