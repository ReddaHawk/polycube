/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* RuleSnatEntryBase.h
*
*
*/

#pragma once

#include "../serializer/RuleSnatEntryJsonObject.h"






#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class RuleSnat;

class RuleSnatEntryBase {
 public:
  
  RuleSnatEntryBase(RuleSnat &parent);
  
  virtual ~RuleSnatEntryBase();
  virtual void update(const RuleSnatEntryJsonObject &conf);
  virtual RuleSnatEntryJsonObject toJsonObject();

  /// <summary>
  /// Rule identifier
  /// </summary>
  virtual uint32_t getId() = 0;

  /// <summary>
  /// Internal IP address (or subnet)
  /// </summary>
  virtual std::string getInternalNet() = 0;
  virtual void setInternalNet(const std::string &value) = 0;

  /// <summary>
  /// Natted source IP address
  /// </summary>
  virtual std::string getExternalIp() = 0;
  virtual void setExternalIp(const std::string &value) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  RuleSnat &parent_;
};
