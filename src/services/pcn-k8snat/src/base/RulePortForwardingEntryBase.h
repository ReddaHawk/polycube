/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* RulePortForwardingEntryBase.h
*
*
*/

#pragma once

#include "../serializer/RulePortForwardingEntryJsonObject.h"






#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class RulePortForwarding;

class RulePortForwardingEntryBase {
 public:
  
  RulePortForwardingEntryBase(RulePortForwarding &parent);
  
  virtual ~RulePortForwardingEntryBase();
  virtual void update(const RulePortForwardingEntryJsonObject &conf);
  virtual RulePortForwardingEntryJsonObject toJsonObject();

  /// <summary>
  /// Rule identifier
  /// </summary>
  virtual uint32_t getId() = 0;

  /// <summary>
  /// External destination IP address
  /// </summary>
  virtual std::string getExternalIp() = 0;
  virtual void setExternalIp(const std::string &value) = 0;

  /// <summary>
  /// External destination L4 port
  /// </summary>
  virtual uint16_t getExternalPort() = 0;
  virtual void setExternalPort(const uint16_t &value) = 0;

  /// <summary>
  /// L4 protocol (TCP, UDP, ALL)
  /// </summary>
  virtual std::string getProto() = 0;
  virtual void setProto(const std::string &value) = 0;

  /// <summary>
  /// Internal destination IP address
  /// </summary>
  virtual std::string getInternalIp() = 0;
  virtual void setInternalIp(const std::string &value) = 0;

  /// <summary>
  /// Internal destination L4 port
  /// </summary>
  virtual uint16_t getInternalPort() = 0;
  virtual void setInternalPort(const uint16_t &value) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  RulePortForwarding &parent_;
};
