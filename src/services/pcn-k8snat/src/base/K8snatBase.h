/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* K8snatBase.h
*
*
*/

#pragma once

#include "../serializer/K8snatJsonObject.h"

#include "../NattingTable.h"
#include "../Ports.h"
#include "../Rule.h"

#include "polycube/services/cube.h"
#include "polycube/services/port.h"



#include "polycube/services/utils.h"
#include "polycube/services/fifo_map.hpp"

#include <spdlog/spdlog.h>

using namespace polycube::service::model;


class K8snatBase: public virtual polycube::service::Cube<Ports> {
 public:
  K8snatBase(const std::string name);
  
  virtual ~K8snatBase();
  virtual void update(const K8snatJsonObject &conf);
  virtual K8snatJsonObject toJsonObject();

  /// <summary>
  /// Entry of the ports table
  /// </summary>
  virtual std::shared_ptr<Ports> getPorts(const std::string &name);
  virtual std::vector<std::shared_ptr<Ports>> getPortsList();
  virtual void addPorts(const std::string &name, const PortsJsonObject &conf);
  virtual void addPortsList(const std::vector<PortsJsonObject> &conf);
  virtual void replacePorts(const std::string &name, const PortsJsonObject &conf);
  virtual void delPorts(const std::string &name);
  virtual void delPortsList();

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<Rule> getRule() = 0;
  virtual void addRule(const RuleJsonObject &value) = 0;
  virtual void replaceRule(const RuleJsonObject &conf);
  virtual void delRule() = 0;

  /// <summary>
  ///
  /// </summary>
  virtual std::shared_ptr<NattingTable> getNattingTable(const std::string &internalSrc, const std::string &internalDst, const uint16_t &internalSport, const uint16_t &internalDport, const std::string &proto) = 0;
  virtual std::vector<std::shared_ptr<NattingTable>> getNattingTableList() = 0;
  virtual void addNattingTable(const std::string &internalSrc, const std::string &internalDst, const uint16_t &internalSport, const uint16_t &internalDport, const std::string &proto, const NattingTableJsonObject &conf) = 0;
  virtual void addNattingTableList(const std::vector<NattingTableJsonObject> &conf);
  virtual void replaceNattingTable(const std::string &internalSrc, const std::string &internalDst, const uint16_t &internalSport, const uint16_t &internalDport, const std::string &proto, const NattingTableJsonObject &conf);
  virtual void delNattingTable(const std::string &internalSrc,const std::string &internalDst,const uint16_t &internalSport,const uint16_t &internalDport,const std::string &proto) = 0;
  virtual void delNattingTableList();
};
