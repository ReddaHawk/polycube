/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "RulePortForwardingEntryBase.h"
#include "../K8snat.h"


RulePortForwardingEntryBase::RulePortForwardingEntryBase(RulePortForwarding &parent)
    : parent_(parent) {}

RulePortForwardingEntryBase::~RulePortForwardingEntryBase() {}

void RulePortForwardingEntryBase::update(const RulePortForwardingEntryJsonObject &conf) {

  if (conf.externalIpIsSet()) {
    setExternalIp(conf.getExternalIp());
  }
  if (conf.externalPortIsSet()) {
    setExternalPort(conf.getExternalPort());
  }
  if (conf.protoIsSet()) {
    setProto(conf.getProto());
  }
  if (conf.internalIpIsSet()) {
    setInternalIp(conf.getInternalIp());
  }
  if (conf.internalPortIsSet()) {
    setInternalPort(conf.getInternalPort());
  }
}

RulePortForwardingEntryJsonObject RulePortForwardingEntryBase::toJsonObject() {
  RulePortForwardingEntryJsonObject conf;

  conf.setId(getId());
  conf.setExternalIp(getExternalIp());
  conf.setExternalPort(getExternalPort());
  conf.setProto(getProto());
  conf.setInternalIp(getInternalIp());
  conf.setInternalPort(getInternalPort());

  return conf;
}

std::shared_ptr<spdlog::logger> RulePortForwardingEntryBase::logger() {
  return parent_.logger();
}

