/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* RuleDnatBase.h
*
*
*/

#pragma once

#include "../serializer/RuleDnatJsonObject.h"
#include "../serializer/RuleDnatAppendOutputJsonObject.h"
#include "../serializer/RuleDnatAppendInputJsonObject.h"

#include "../RuleDnatEntry.h"





#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Rule;

class RuleDnatBase {
 public:
  
  RuleDnatBase(Rule &parent);
  
  virtual ~RuleDnatBase();
  virtual void update(const RuleDnatJsonObject &conf);
  virtual RuleDnatJsonObject toJsonObject();

  /// <summary>
  /// List of Destination NAT rules
  /// </summary>
  virtual std::shared_ptr<RuleDnatEntry> getEntry(const uint32_t &id) = 0;
  virtual std::vector<std::shared_ptr<RuleDnatEntry>> getEntryList() = 0;
  virtual void addEntry(const uint32_t &id, const RuleDnatEntryJsonObject &conf) = 0;
  virtual void addEntryList(const std::vector<RuleDnatEntryJsonObject> &conf);
  virtual void replaceEntry(const uint32_t &id, const RuleDnatEntryJsonObject &conf);
  virtual void delEntry(const uint32_t &id) = 0;
  virtual void delEntryList();
  virtual RuleDnatAppendOutputJsonObject append(RuleDnatAppendInputJsonObject input) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Rule &parent_;
};
