/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* RuleSnatBase.h
*
*
*/

#pragma once

#include "../serializer/RuleSnatJsonObject.h"
#include "../serializer/RuleSnatAppendOutputJsonObject.h"
#include "../serializer/RuleSnatAppendInputJsonObject.h"

#include "../RuleSnatEntry.h"





#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Rule;

class RuleSnatBase {
 public:
  
  RuleSnatBase(Rule &parent);
  
  virtual ~RuleSnatBase();
  virtual void update(const RuleSnatJsonObject &conf);
  virtual RuleSnatJsonObject toJsonObject();

  /// <summary>
  /// List of Source NAT rules
  /// </summary>
  virtual std::shared_ptr<RuleSnatEntry> getEntry(const uint32_t &id) = 0;
  virtual std::vector<std::shared_ptr<RuleSnatEntry>> getEntryList() = 0;
  virtual void addEntry(const uint32_t &id, const RuleSnatEntryJsonObject &conf) = 0;
  virtual void addEntryList(const std::vector<RuleSnatEntryJsonObject> &conf);
  virtual void replaceEntry(const uint32_t &id, const RuleSnatEntryJsonObject &conf);
  virtual void delEntry(const uint32_t &id) = 0;
  virtual void delEntryList();
  virtual RuleSnatAppendOutputJsonObject append(RuleSnatAppendInputJsonObject input) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Rule &parent_;
};
