/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* RulePortForwardingBase.h
*
*
*/

#pragma once

#include "../serializer/RulePortForwardingJsonObject.h"
#include "../serializer/RulePortForwardingAppendOutputJsonObject.h"
#include "../serializer/RulePortForwardingAppendInputJsonObject.h"

#include "../RulePortForwardingEntry.h"





#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Rule;

class RulePortForwardingBase {
 public:
  
  RulePortForwardingBase(Rule &parent);
  
  virtual ~RulePortForwardingBase();
  virtual void update(const RulePortForwardingJsonObject &conf);
  virtual RulePortForwardingJsonObject toJsonObject();

  /// <summary>
  /// List of port forwarding rules
  /// </summary>
  virtual std::shared_ptr<RulePortForwardingEntry> getEntry(const uint32_t &id) = 0;
  virtual std::vector<std::shared_ptr<RulePortForwardingEntry>> getEntryList() = 0;
  virtual void addEntry(const uint32_t &id, const RulePortForwardingEntryJsonObject &conf) = 0;
  virtual void addEntryList(const std::vector<RulePortForwardingEntryJsonObject> &conf);
  virtual void replaceEntry(const uint32_t &id, const RulePortForwardingEntryJsonObject &conf);
  virtual void delEntry(const uint32_t &id) = 0;
  virtual void delEntryList();
  virtual RulePortForwardingAppendOutputJsonObject append(RulePortForwardingAppendInputJsonObject input) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Rule &parent_;
};
