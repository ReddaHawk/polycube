/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "RuleSnat.h"
#include "K8snat.h"


RuleSnat::RuleSnat(Rule &parent, const RuleSnatJsonObject &conf)
    : RuleSnatBase(parent) {
  addEntryList(conf.getEntry());
}

RuleSnat::~RuleSnat() {}
std::shared_ptr<RuleSnatEntry> RuleSnat::getEntry(const uint32_t &id) {
  throw std::runtime_error("RuleSnat::getEntry: Method not implemented");
}

std::vector<std::shared_ptr<RuleSnatEntry>> RuleSnat::getEntryList() {
  throw std::runtime_error("RuleSnat::getEntryList: Method not implemented");
}

void RuleSnat::addEntry(const uint32_t &id, const RuleSnatEntryJsonObject &conf) {
  throw std::runtime_error("RuleSnat::addEntry: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void RuleSnat::addEntryList(const std::vector<RuleSnatEntryJsonObject> &conf) {
  // call default implementation in base class
  RuleSnatBase::addEntryList(conf);
}

// Basic default implementation, place your extension here (if needed)
void RuleSnat::replaceEntry(const uint32_t &id, const RuleSnatEntryJsonObject &conf) {
  // call default implementation in base class
  RuleSnatBase::replaceEntry(id, conf);
}

void RuleSnat::delEntry(const uint32_t &id) {
  throw std::runtime_error("RuleSnat::delEntry: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void RuleSnat::delEntryList() {
  // call default implementation in base class
  RuleSnatBase::delEntryList();
}


RuleSnatAppendOutputJsonObject RuleSnat::append(RuleSnatAppendInputJsonObject input) {
  throw std::runtime_error("RuleSnat::RuleSnatAppendOutput: Method not implemented");
}

