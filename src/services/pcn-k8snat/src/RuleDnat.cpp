/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


// TODO: Modify these methods with your own implementation


#include "RuleDnat.h"
#include "K8snat.h"


RuleDnat::RuleDnat(Rule &parent, const RuleDnatJsonObject &conf)
    : RuleDnatBase(parent) {
  addEntryList(conf.getEntry());
}

RuleDnat::~RuleDnat() {}
std::shared_ptr<RuleDnatEntry> RuleDnat::getEntry(const uint32_t &id) {
  throw std::runtime_error("RuleDnat::getEntry: Method not implemented");
}

std::vector<std::shared_ptr<RuleDnatEntry>> RuleDnat::getEntryList() {
  throw std::runtime_error("RuleDnat::getEntryList: Method not implemented");
}

void RuleDnat::addEntry(const uint32_t &id, const RuleDnatEntryJsonObject &conf) {
  throw std::runtime_error("RuleDnat::addEntry: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void RuleDnat::addEntryList(const std::vector<RuleDnatEntryJsonObject> &conf) {
  // call default implementation in base class
  RuleDnatBase::addEntryList(conf);
}

// Basic default implementation, place your extension here (if needed)
void RuleDnat::replaceEntry(const uint32_t &id, const RuleDnatEntryJsonObject &conf) {
  // call default implementation in base class
  RuleDnatBase::replaceEntry(id, conf);
}

void RuleDnat::delEntry(const uint32_t &id) {
  throw std::runtime_error("RuleDnat::delEntry: Method not implemented");
}

// Basic default implementation, place your extension here (if needed)
void RuleDnat::delEntryList() {
  // call default implementation in base class
  RuleDnatBase::delEntryList();
}


RuleDnatAppendOutputJsonObject RuleDnat::append(RuleDnatAppendInputJsonObject input) {
  throw std::runtime_error("RuleDnat::RuleDnatAppendOutput: Method not implemented");
}

