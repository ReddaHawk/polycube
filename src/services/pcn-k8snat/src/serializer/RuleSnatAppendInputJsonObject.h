/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* RuleSnatAppendInputJsonObject.h
*
*
*/

#pragma once


#include "JsonObjectBase.h"


namespace polycube {
namespace service {
namespace model {


/// <summary>
///
/// </summary>
class  RuleSnatAppendInputJsonObject : public JsonObjectBase {
public:
  RuleSnatAppendInputJsonObject();
  RuleSnatAppendInputJsonObject(const nlohmann::json &json);
  ~RuleSnatAppendInputJsonObject() final = default;
  nlohmann::json toJson() const final;


  /// <summary>
  /// Internal IP address (or subnet)
  /// </summary>
  std::string getInternalNet() const;
  void setInternalNet(std::string value);
  bool internalNetIsSet() const;

  /// <summary>
  /// Natted source IP address
  /// </summary>
  std::string getExternalIp() const;
  void setExternalIp(std::string value);
  bool externalIpIsSet() const;

private:
  std::string m_internalNet;
  bool m_internalNetIsSet;
  std::string m_externalIp;
  bool m_externalIpIsSet;
};

}
}
}

