/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */



#include "RuleDnatAppendInputJsonObject.h"
#include <regex>

namespace polycube {
namespace service {
namespace model {

RuleDnatAppendInputJsonObject::RuleDnatAppendInputJsonObject() {
  m_externalIpIsSet = false;
  m_internalIpIsSet = false;
}

RuleDnatAppendInputJsonObject::RuleDnatAppendInputJsonObject(const nlohmann::json &val) :
  JsonObjectBase(val) {
  m_externalIpIsSet = false;
  m_internalIpIsSet = false;


  if (val.count("external-ip")) {
    setExternalIp(val.at("external-ip").get<std::string>());
  }

  if (val.count("internal-ip")) {
    setInternalIp(val.at("internal-ip").get<std::string>());
  }
}

nlohmann::json RuleDnatAppendInputJsonObject::toJson() const {
  nlohmann::json val = nlohmann::json::object();
  if (!getBase().is_null()) {
    val.update(getBase());
  }

  if (m_externalIpIsSet) {
    val["external-ip"] = m_externalIp;
  }

  if (m_internalIpIsSet) {
    val["internal-ip"] = m_internalIp;
  }

  return val;
}

std::string RuleDnatAppendInputJsonObject::getExternalIp() const {
  return m_externalIp;
}

void RuleDnatAppendInputJsonObject::setExternalIp(std::string value) {
  m_externalIp = value;
  m_externalIpIsSet = true;
}

bool RuleDnatAppendInputJsonObject::externalIpIsSet() const {
  return m_externalIpIsSet;
}



std::string RuleDnatAppendInputJsonObject::getInternalIp() const {
  return m_internalIp;
}

void RuleDnatAppendInputJsonObject::setInternalIp(std::string value) {
  m_internalIp = value;
  m_internalIpIsSet = true;
}

bool RuleDnatAppendInputJsonObject::internalIpIsSet() const {
  return m_internalIpIsSet;
}




}
}
}

