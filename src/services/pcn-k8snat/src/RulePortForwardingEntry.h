/**
* k8snat API generated from k8snat.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


#pragma once


#include "../base/RulePortForwardingEntryBase.h"


class RulePortForwarding;

using namespace polycube::service::model;

class RulePortForwardingEntry : public RulePortForwardingEntryBase {
 public:
  RulePortForwardingEntry(RulePortForwarding &parent, const RulePortForwardingEntryJsonObject &conf);
  virtual ~RulePortForwardingEntry();

  /// <summary>
  /// Rule identifier
  /// </summary>
  uint32_t getId() override;

  /// <summary>
  /// External destination IP address
  /// </summary>
  std::string getExternalIp() override;
  void setExternalIp(const std::string &value) override;

  /// <summary>
  /// External destination L4 port
  /// </summary>
  uint16_t getExternalPort() override;
  void setExternalPort(const uint16_t &value) override;

  /// <summary>
  /// L4 protocol (TCP, UDP, ALL)
  /// </summary>
  std::string getProto() override;
  void setProto(const std::string &value) override;

  /// <summary>
  /// Internal destination IP address
  /// </summary>
  std::string getInternalIp() override;
  void setInternalIp(const std::string &value) override;

  /// <summary>
  /// Internal destination L4 port
  /// </summary>
  uint16_t getInternalPort() override;
  void setInternalPort(const uint16_t &value) override;
};
