# syntax = tonistiigi/dockerfile:runmount20180618
###############################################
# STEP 1: using an Ubuntu 18.04 image to install the entire Polycube framework with all dependencies.
# 
# During this step an ubuntu image is used to compile Polycube with all its dependencies.
# This dockerfile is reused for all the DEFAULT_MODE (default, pcn-iptables, pcn-k8s) which, thanks to install.sh and pre-requirements.sh scripts,
# enable/disable Polycube services and install specific tools.
FROM reddahawk/polycube-base:latest

ARG DEFAULT_MODE=default
ENV MODE=$DEFAULT_MODE
RUN --mount=target=/polycube cp -r /polycube /tmp/polycube && cd /tmp/polycube && \
mkdir -p /usr/local/share/polycube /usr/local/include/polycube /opt/cni/bin /cni && touch /cni-conf /pcn_k8s /opt/cni/bin/polycube \
# instal
cd /tmp && mkdir -p tmp && cd tmp && \
curl -sS -L https://storage.googleapis.com/kubernetes-release/network-plugins/cni-0799f5732f2a11b329d9e3d51b9c8f2e3759f2ff.tar.gz -o cni.tar.gz && \
tar -xvf cni.tar.gz && \
cp bin/loopback /cni && \
cd /tmp/polycube/src/components/k8s/cni/polycube && \
GOOS=linux go build -o /opt/cni/bin/polycube . && \
cd /tmp/polycube/src/components/k8s/cni/conf && \
GOOS=linux go build -o /cni-conf . && \
cd /tmp/polycube/src/components/k8s/pcn_k8s/ && \
GOOS=linux go build -o /pcn_k8s . ; \
# install pcn-k8s only essential tools, else remove useless scripts
apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq iptables iproute2 && \
apt-get purge --auto-remove && apt-get clean ; \
ldconfig

# by running nsenter --mount=/host/proc/1/ns/mnt polycubed, the daemon has a complete view of the namespaces of the host and it is able to manipulate them (needed for shadow services)
CMD ["nsenter","--mount=/host/proc/1/ns/mnt","polycubed"]
